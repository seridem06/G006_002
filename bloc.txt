=========================================
Manipulando contenido HTML con JavaScript
=========================================
Estás trabajando en la interacción entre HTML y JavaScript para hacer la interfaz de usuario más dinámica e interactiva. Sin embargo, te gustaría cambiar el título de tu aplicación de forma dinámica con JavaScript.

¿Qué código JavaScript usarías para cambiar el texto mostrado en el encabezado de tu página (elemento h1) a "Bienvenido al mundo dev"?
========================================================================================================================
let titulo = document.querySelector('h1')
titulo.innerHTML = 'Bienvenido al mundo dev'
========================================================================================================================
funcion onclick
========================================================================================================================
Después de completar el curso "Lógica de programación: explore funciones y listas" en Alura, fuiste invitado a participar en un proyecto desafiante para crear un nuevo producto llamado "Screen Match", que pretende ser una especie de "YouTube" de Alura. Tu papel es crear una función que active una alerta cuando una persona hace clic en un botón específico.

Teniendo en cuenta lo que se enseñó sobre la función onclick, ¿cuál es la forma correcta de crear esta funcionalidad, utilizándose de las buenas prácticas de escritura de las funciones?
========================================================================================================================
<button onclick="alertFunction()">Haz clic aquí</button>

function alertFunction() {
  alert("¡Hola, has hecho clic en el botón!");
}
========================================================================================================================
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

Para saber más: diferencias entre HTML, CSS y JS

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
========================================================================================================================
HTML, CSS y JavaScript (JS) son tres tecnologías fundamentales para el desarrollo web.

HTML (HyperText Markup Language) es el lenguaje de marcado utilizado para estructurar el contenido de una página web. Este lenguaje emplea etiquetas para definir la jerarquía de los elementos de una página. Originado en 1991 por Tim Berners-Lee, HTML es como el esqueleto de una página web: trabaja organizando el contenido, como títulos, párrafos, imágenes y enlaces, para que todo esté ordenado y en su lugar.

CSS (Cascading Style Sheets), creado en 1995, se destaca como un lenguaje de estilos. Separa la presentación de la estructura: es responsable de la presentación y estilización de los elementos, ya que permite controlar colores, fuentes, diseños y otros aspectos visuales. Es como vestir la estructura HTML con ropa elegante para que la página se vea exactamente como deseas.

JavaScript, por su parte, es el único lenguaje de programación de los tres. Es responsable de agregar interactividad y dinamismo a las páginas. Permite la creación de funcionalidades como animaciones, validaciones de formularios y actualizaciones de contenido en tiempo real.

El papel de cada una de estas tecnologías en la construcción de aplicaciones web, en resumen, es el siguiente: HTML estructura el contenido, CSS define el estilo y el diseño, y JavaScript agrega funcionalidades dinámicas.

Aprender estas tecnologías es crucial para cualquier persona interesada en el desarrollo web, ya que forman la base del entorno digital. Comprender HTML es necesario para estructurar y organizar el contenido de una página de manera semántica, lo que es vital para la accesibilidad, la indexación en motores de búsqueda y una experiencia consistente en diferentes dispositivos.

CSS permite a las personas desarrolladoras controlar el diseño y la apariencia de sus sitios web, lo que permite la creación de diseños atractivos y receptivos que se adaptan a diferentes tamaños de pantalla.

Por último, JavaScript nos capacita a crear experiencias interactivas y dinámicas, mejorando la usabilidad al ofrecer funcionalidades más avanzadas a los usuarios.

La competencia en HTML, CSS y JavaScript permite dar vida a ideas de manera creativa y funcional, lo que brinda a usuarios finales una experiencia atractiva e intuitiva.

Además, estas habilidades son altamente valoradas en el mercado laboral, ya que la demanda de desarrolladores web calificados es constante, dada la continua importancia de la presencia en línea para empresas y particulares. Por lo tanto, aprender y mejorar estas tecnologías es una inversión significativa para cualquiera que desee destacarse en el campo del desarrollo web.


__________  _______                                                 _______________

Tecnología	Función	                                                Ejemplos de Uso
__________  _______                                                 _______________

HTML	    Lenguaje de marcado para estructurar contenido.	        Título, Párrafo
CSS	        Lenguaje de estilos para presentación y estilización.	p { color: blue; } div { background: #f2f2f2; }
JavaScript	Lenguaje de programación para interactividad.	        function inicarJogo() { ... }


========================================================================================================================
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

Anatomía de una función

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
========================================================================================================================
La anatomía de una función en JavaScript está compuesta por diversas partes que definen su comportamiento. Es importante comprender estos elementos para crear funciones reutilizables y modularizar el código de manera eficiente.

Por lo tanto, conocer la estructura de las funciones en JavaScript es fundamental para dominar el lenguaje y desarrollar aplicaciones complejas de manera organizada y funcional.

Con base en lo que vimos en esta lección, analiza las siguientes afirmaciones y marca solo las opciones verdaderas sobre funciones.

Alternativa correta
Palabra clave function: Se utiliza para declarar una función en JavaScript.


Toda función en JavaScript se declara utilizando la palabra clave "function". Esta palabra clave se utiliza para crear una función.

Alternativa correta
Las funciones en JavaScript pueden tener un nombre.


Las funciones en JavaScript pueden tener un nombre. De hecho, es una práctica común dar un nombre descriptivo a las funciones para facilitar la lectura y comprensión del código. Estos nombres se utilizan para llamar a la función posteriormente o hacer referencia a ella dentro del propio código, lo que te permite reutilizar la función en diferentes partes del programa.

Alternativa correta
Paréntesis (): Después del nombre de la función (si lo hay), los paréntesis se usan para definir los parámetros de la función.


Los paréntesis en una función en JavaScript se utilizan para contener los argumentos que recibe la función, lo que permite pasar información a la función e influir en su comportamiento y resultados.


========================================================================================================================
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

Función que verifica números

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
========================================================================================================================
Eres un desarrollador de software que trabaja con JavaScript y necesitas crear una función que verifique si un número es positivo, negativo o cero. Tu tarea es implementar una función que reciba como parámetro un número entero y muestre un mensaje en la consola según las siguientes reglas:

Si el número es mayor que cero, el mensaje debe ser: "El número es positivo."
Si el número es menor que cero, el mensaje debe ser: "El número es negativo."
Si el número es igual a cero, el mensaje debe ser: "El número es cero."
Puedes utilizar la estructura de control if-else para verificar las condiciones y mostrar el mensaje correspondiente en la consola.

Analiza las siguientes alternativas y marca aquella que contiene el código que cumple con todas las reglas mencionadas anteriormente:

function verificarNumero(numero) {
  if (numero > 0) {
    console.log("El número es positivo.");
  } else if (numero < 0) {
    console.log("El número es negativo.");
  } else {
    console.log("El número es zero.");
  }
}

En este código, utilizamos la estructura de control if-else para verificar las tres posibilidades: si el número es mayor que cero, si es menor que cero o si es igual a cero. Dependiendo de la condición, la función imprime el mensaje correspondiente en la consola."



Resolución del desafío 2
Saber cómo usar funciones es uno de los conceptos fundamentales en la programación y el desarrollo de software. Las funciones desempeñan un papel crucial en la organización, modularización y reutilización del código.

Con eso en mente, hemos creado una lista de actividades (opcionales) centradas en la práctica para mejorar aún más tu experiencia de aprendizaje.

Sugestión de respuestas
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
1.Crear una función que muestra "¡Hola, mundo!" en la consola.
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

function mostrarHola() {
  console.log("¡Hola, mundo!");
}

mostrarHola();
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
2. Crear una función que recibe un nombre como parámetro y muestra "¡Hola, [nombre]!" en la consola.
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

function mostrarHolaNombre(nombre) {
  console.log(`¡Hola, ${nombre}!`);
}

mostrarHolaNombre("Alice");

&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
3.Crear una función que recibe un número como parámetro y devuelve el doble de ese número.
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

function calcularDoble(numero) {
  return numero * 2;
}

let resultadoDoble = calcularDoble(5);
console.log(resultadoDoble);

&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
4.Crear una función que recibe tres números como parámetros y devuelve su promedio.
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

function calcularPromedio(a, b, c) {
  return (a + b + c) / 3;
}

let promedio = calcularPromedio(4, 7, 10);
console.log(promedio);

&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
5.Crear una función que recibe dos números como parámetros y devuelve el mayor de ellos.
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

function encontrarMayor(a, b) {
  return a > b ? a : b;
}

let numeroMayor = encontrarMayor(15, 9);
console.log(numeroMayor);

&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
6.Crear una función que recibe un número como parámetro y devuelve el resultado de multiplicar ese número por sí mismo.
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
function cuadrado(numero) {
  return numero * numero;
}

let resultado = cuadrado(2);
console.log(resultado);


